//
//  SAResizableBubble.cs
//  TellMe.iOS
//
//  Created by Vitaly Dubnovitsky on 10/30/17.
//  Copyright Â© 2017 Brainworks LLC. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//


using System;
using CoreGraphics;
using Foundation;
using UIKit;

namespace TellMe.iOS.Views.VideoSlider
{
    [Register("SAResizableBubble")]
    public class SAResizableBubble : UIView
    {
        public SAResizableBubble(CGRect frame) : base(frame)
        {
        }

        public override void Draw(CGRect rect)
        {
            DrawCanvas1(rect);
        }

        //// Drawing Methods

        public static void DrawCanvas1(CGRect bubbleFrame)
        {
            //// General Declarations
            var colorSpace = CGColorSpace.CreateDeviceRGB();
            var context = UIGraphics.GetCurrentContext();

            //// Color Declarations
            var bubbleGradientTop = UIColor.FromRGBA(1.000f, 0.939f, 0.743f, 1.000f);
            var bubbleGradientBottom = UIColor.FromRGBA(1.000f, 0.817f, 0.053f, 1.000f);
            var bubbleHighlightColor = UIColor.FromRGBA(1.000f, 1.000f, 1.000f, 1.000f);
            var bubbleStrokeColor = UIColor.FromRGBA(0.173f, 0.173f, 0.173f, 1.000f);

            //// Gradient Declarations
            var bubbleGradientColors = new CGColor[] {bubbleGradientTop.CGColor, bubbleGradientBottom.CGColor};
            var bubbleGradientLocations = new nfloat[] {0.0f, 1.0f};
            var bubbleGradient = new CGGradient(colorSpace, bubbleGradientColors, bubbleGradientLocations);

            //// Shadow Declarations
            var outerShadow = new NSShadow();
            outerShadow.ShadowColor = UIColor.Black;
            outerShadow.ShadowOffset = new CGSize(0.0f, 6.0f);
            outerShadow.ShadowBlurRadius = 13.0f;
            var highlightShadow = new NSShadow();
            highlightShadow.ShadowColor = bubbleHighlightColor;
            highlightShadow.ShadowOffset = new CGSize(0.0f, 2.0f);
            highlightShadow.ShadowBlurRadius = 0.0f;


            //// Subframes
            var arrowFrame =
                new CGRect(bubbleFrame.GetMinX() + NMath.Floor((bubbleFrame.Width - 59.0f) * 0.50462f + 0.5f),
                    bubbleFrame.GetMinY() + bubbleFrame.Height - 46.0f, 59.0f, 46.0f);


            //// Bubble Drawing
            var bubblePath = new UIBezierPath();
            bubblePath.MoveTo(new CGPoint(bubbleFrame.GetMaxX() - 12.0f, bubbleFrame.GetMinY() + 28.5f));
            bubblePath.AddLineTo(new CGPoint(bubbleFrame.GetMaxX() - 12.0f, bubbleFrame.GetMaxY() - 27.5f));
            bubblePath.AddCurveToPoint(new CGPoint(bubbleFrame.GetMaxX() - 25.0f, bubbleFrame.GetMaxY() - 14.5f),
                new CGPoint(bubbleFrame.GetMaxX() - 12.0f, bubbleFrame.GetMaxY() - 20.32f),
                new CGPoint(bubbleFrame.GetMaxX() - 17.82f, bubbleFrame.GetMaxY() - 14.5f));
            bubblePath.AddLineTo(new CGPoint(arrowFrame.GetMinX() + 40.5f, arrowFrame.GetMaxY() - 13.5f));
            bubblePath.AddLineTo(new CGPoint(arrowFrame.GetMinX() + 29.5f, arrowFrame.GetMaxY() - 0.5f));
            bubblePath.AddLineTo(new CGPoint(arrowFrame.GetMinX() + 18.5f, arrowFrame.GetMaxY() - 13.5f));
            bubblePath.AddLineTo(new CGPoint(bubbleFrame.GetMinX() + 26.5f, bubbleFrame.GetMaxY() - 14.5f));
            bubblePath.AddCurveToPoint(new CGPoint(bubbleFrame.GetMinX() + 13.5f, bubbleFrame.GetMaxY() - 27.5f),
                new CGPoint(bubbleFrame.GetMinX() + 19.32f, bubbleFrame.GetMaxY() - 14.5f),
                new CGPoint(bubbleFrame.GetMinX() + 13.5f, bubbleFrame.GetMaxY() - 20.32f));
            bubblePath.AddLineTo(new CGPoint(bubbleFrame.GetMinX() + 13.5f, bubbleFrame.GetMinY() + 28.5f));
            bubblePath.AddCurveToPoint(new CGPoint(bubbleFrame.GetMinX() + 26.5f, bubbleFrame.GetMinY() + 15.5f),
                new CGPoint(bubbleFrame.GetMinX() + 13.5f, bubbleFrame.GetMinY() + 21.32f),
                new CGPoint(bubbleFrame.GetMinX() + 19.32f, bubbleFrame.GetMinY() + 15.5f));
            bubblePath.AddLineTo(new CGPoint(bubbleFrame.GetMaxX() - 25.0f, bubbleFrame.GetMinY() + 15.5f));
            bubblePath.AddCurveToPoint(new CGPoint(bubbleFrame.GetMaxX() - 12.0f, bubbleFrame.GetMinY() + 28.5f),
                new CGPoint(bubbleFrame.GetMaxX() - 17.82f, bubbleFrame.GetMinY() + 15.5f),
                new CGPoint(bubbleFrame.GetMaxX() - 12.0f, bubbleFrame.GetMinY() + 21.32f));
            bubblePath.ClosePath();
            context.SaveState();
            context.SetShadow(outerShadow.ShadowOffset, outerShadow.ShadowBlurRadius, outerShadow.ShadowColor.CGColor);
            context.BeginTransparencyLayer(null);
            bubblePath.AddClip();
            var bubbleBounds = bubblePath.CGPath.PathBoundingBox;
            context.DrawLinearGradient(bubbleGradient,
                new CGPoint(bubbleBounds.GetMidX(), bubbleBounds.GetMinY()),
                new CGPoint(bubbleBounds.GetMidX(), bubbleBounds.GetMaxY()),
                0);
            context.EndTransparencyLayer();

            ////// Bubble Inner Shadow
            context.SaveState();
            context.ClipToRect(bubblePath.Bounds);
            context.SetShadow(new CGSize(0, 0), 0);
            context.SetAlpha(highlightShadow.ShadowColor.CGColor.Alpha);
            context.BeginTransparencyLayer();
            {
                var opaqueShadow = new CGColor(highlightShadow.ShadowColor.CGColor, 1.0f);
                context.SetShadow(highlightShadow.ShadowOffset, highlightShadow.ShadowBlurRadius, opaqueShadow);
                context.SetBlendMode(CGBlendMode.SourceOut);
                context.BeginTransparencyLayer();

                context.SetFillColor(opaqueShadow);
                bubblePath.Fill();

                context.EndTransparencyLayer();
            }
            context.EndTransparencyLayer();
            context.RestoreState();

            context.RestoreState();

            bubbleStrokeColor.SetStroke();
            bubblePath.LineWidth = 1.0f;
            bubblePath.Stroke();
        }
    }
}